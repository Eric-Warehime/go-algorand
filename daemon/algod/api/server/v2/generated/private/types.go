// Package private provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/algorand/oapi-codegen DO NOT EDIT.
package private

const (
	Api_keyScopes = "api_key.Scopes"
)

// AccountParticipation describes the parameters used by this account in consensus protocol.
type AccountParticipation struct {
	// \[sel\] Selection public key (if any) currently registered for this round.
	SelectionParticipationKey []byte `json:"selection-participation-key"`

	// \[stprf\] Root of the state proof key (if any)
	StateProofKey *[]byte `json:"state-proof-key,omitempty"`

	// \[voteFst\] First round for which this participation is valid.
	VoteFirstValid uint64 `json:"vote-first-valid"`

	// \[voteKD\] Number of subkeys in each batch of participation keys.
	VoteKeyDilution uint64 `json:"vote-key-dilution"`

	// \[voteLst\] Last round for which this participation is valid.
	VoteLastValid uint64 `json:"vote-last-valid"`

	// \[vote\] root participation public key (if any) currently registered for this round.
	VoteParticipationKey []byte `json:"vote-participation-key"`
}

// Application state delta.
type AccountStateDelta struct {
	Address string `json:"address"`

	// Application state delta.
	Delta StateDelta `json:"delta"`
}

// An error response with optional data field.
type ErrorResponse struct {
	Data    *map[string]interface{} `json:"data,omitempty"`
	Message string                  `json:"message"`
}

// Represents a TEAL value delta.
type EvalDelta struct {
	// \[at\] delta action.
	Action uint64 `json:"action"`

	// \[bs\] bytes value.
	Bytes *string `json:"bytes,omitempty"`

	// \[ui\] uint value.
	Uint *uint64 `json:"uint,omitempty"`
}

// Key-value pairs for StateDelta.
type EvalDeltaKeyValue struct {
	Key string `json:"key"`

	// Represents a TEAL value delta.
	Value EvalDelta `json:"value"`
}

// Represents a participation key used by the node.
type ParticipationKey struct {
	// Address the key was generated for.
	Address string `json:"address"`

	// When registered, this is the first round it may be used.
	EffectiveFirstValid *uint64 `json:"effective-first-valid,omitempty"`

	// When registered, this is the last round it may be used.
	EffectiveLastValid *uint64 `json:"effective-last-valid,omitempty"`

	// The key's ParticipationID.
	Id string `json:"id"`

	// AccountParticipation describes the parameters used by this account in consensus protocol.
	Key AccountParticipation `json:"key"`

	// Round when this key was last used to propose a block.
	LastBlockProposal *uint64 `json:"last-block-proposal,omitempty"`

	// Round when this key was last used to generate a state proof.
	LastStateProof *uint64 `json:"last-state-proof,omitempty"`

	// Round when this key was last used to vote.
	LastVote *uint64 `json:"last-vote,omitempty"`
}

// Details about a pending transaction. If the transaction was recently confirmed, includes confirmation details like the round and reward details.
type PendingTransactionResponse struct {
	// The application index if the transaction was found and it created an application.
	ApplicationIndex *uint64 `json:"application-index,omitempty"`

	// The number of the asset's unit that were transferred to the close-to address.
	AssetClosingAmount *uint64 `json:"asset-closing-amount,omitempty"`

	// The asset index if the transaction was found and it created an asset.
	AssetIndex *uint64 `json:"asset-index,omitempty"`

	// Rewards in microalgos applied to the close remainder to account.
	CloseRewards *uint64 `json:"close-rewards,omitempty"`

	// Closing amount for the transaction.
	ClosingAmount *uint64 `json:"closing-amount,omitempty"`

	// The round where this transaction was confirmed, if present.
	ConfirmedRound *uint64 `json:"confirmed-round,omitempty"`

	// Application state delta.
	GlobalStateDelta *StateDelta `json:"global-state-delta,omitempty"`

	// Inner transactions produced by application execution.
	InnerTxns *[]PendingTransactionResponse `json:"inner-txns,omitempty"`

	// \[ld\] Local state key/value changes for the application being executed by this transaction.
	LocalStateDelta *[]AccountStateDelta `json:"local-state-delta,omitempty"`

	// \[lg\] Logs for the application being executed by this transaction.
	Logs *[][]byte `json:"logs,omitempty"`

	// Indicates that the transaction was kicked out of this node's transaction pool (and specifies why that happened).  An empty string indicates the transaction wasn't kicked out of this node's txpool due to an error.
	PoolError string `json:"pool-error"`

	// Rewards in microalgos applied to the receiver account.
	ReceiverRewards *uint64 `json:"receiver-rewards,omitempty"`

	// Rewards in microalgos applied to the sender account.
	SenderRewards *uint64 `json:"sender-rewards,omitempty"`

	// The raw signed transaction.
	Txn map[string]interface{} `json:"txn"`
}

// Application state delta.
type StateDelta = []EvalDeltaKeyValue

// ShutdownNodeParams defines parameters for ShutdownNode.
type ShutdownNodeParams struct {
	Timeout *uint64 `form:"timeout,omitempty" json:"timeout,omitempty"`
}
